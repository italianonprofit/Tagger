<?php
/**
 * Create a Tag
 * 
 * @package tagger
 * @subpackage processors
 */
class TaggerTagCreateProcessor extends modObjectCreateProcessor {
    public $classKey = 'TaggerTag';
    public $languageTopics = array('tagger:default');
    public $objectType = 'tagger.tag';
    /** @var TaggerTag $object */
    public $object;

    public function beforeSave() {
        $name = $this->getProperty('tag');
        $group = $this->getProperty('group');
        $alias = $this->getProperty('alias');
        //$classKey = $this->getProperty('classKey');

        if (empty($name) || empty($group) || empty($classKey)) {
            if (empty($group)) {
                $this->addFieldError('group',$this->modx->lexicon('tagger.err.group_name_ns'));
            }

            if (empty($name)) {
                $this->addFieldError('tag',$this->modx->lexicon('tagger.err.tag_name_ns'));
            }
            /*if (empty($classKey)) {
                $this->addFieldError('classKey',$this->modx->lexicon('tagger.err.classKey_name_ns'));
            }*/
        } else {
            if ($this->doesAlreadyExist(array('tag' => $name, 'group' => $group))) {
                $this->addFieldError('tag',$this->modx->lexicon('tagger.err.tag_name_ae'));
            }
        }

        if (!empty($alias)) {
            $alias = $this->object->cleanAlias($alias);
            if ($this->doesAlreadyExist(array('alias' => $alias, 'group' => $group))) {
                $this->addFieldError('alias',$this->modx->lexicon('tagger.err.tag_alias_ae'));
            }
        }

        return parent::beforeSave();
    }

    /**
     * @return bool
     * Verifico se Ã¨ impostato un parent
     * Copio le risorse assegnate
     *
     */
    public function afterSave()
    {
        $parent = $this->getProperty('parent');
        if(empty($parent)) return parent::afterSave();
        $parentTag = $this->modx->getObject('TaggerTag',$parent);
        if(!($parentTag instanceof TaggerTag)) parent::afterSave();

        $taggerTagResources = $this->modx->getCollection('TaggerTagResource',array(
            'tag'=>$parentTag->id
        ));
        if(empty($taggerTagResources)) return parent::afterSave();

        foreach($taggerTagResources as $tagRes){
            $alreadyExist = $this->modx->getObject('TaggerTagResource',array(
                'tag'=>$this->object->get('id'),
                'classKey'=>$tagRes->classKey,
                'resource'=>$tagRes->resource,
            ));
            if(!($alreadyExist instanceof TaggerTagResource)){
                $newTagRes = $this->modx->newObject('TaggerTagResource');
                $newTagRes->fromArray(array(
                    'tag'=>$this->object->get('id'),
                    'classKey'=>$tagRes->classKey,
                    'resource'=>$tagRes->resource,
                ),'',true);
                $newTagRes->save();
            }
        }

        return parent::afterSave(); // TODO: Change the autogenerated stub
    }
}
return 'TaggerTagCreateProcessor';
