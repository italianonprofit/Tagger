<?php
/**
 * Remove a Tag.
 * 
 * @package tagger
 * @subpackage processors
 */
class TaggerTagRemoveProcessor extends modObjectRemoveProcessor {
    public $classKey = 'TaggerTag';
    public $languageTopics = array('tagger:default');
    public $objectType = 'tagger.tag';

    /**
     * @return bool
     *
     * Rimuovo indici corrispondenti al tag
     * Rimuovo TaggerTagCollection corrispondi al tag
     */
    public function afterRemove()
    {
        $indexTag = $this->modx->getObject('SearchIndexTag',array(
            'tag_id'=>$this->object->id
        ));
        if($indexTag instanceof SearchIndexTag){
            $index = $this->modx->getObject('SearchIndex',$indexTag->index_id);
            if($index) $index->remove();
            $indexTag->remove();
        }

        $c = $this->modx->newQuery('TaggerTagCollection');
        $c->where(array(
            'parent_id'=>$this->object->id,
        ));
        $c->orCondition(array(
            'child_id'=>$this->object->id,
        ));
        $coll = $this->modx->getCollection('TaggerTagCollection',$c);
        foreach($coll as $item){
            $item->remove();
        }
        return parent::afterRemove(); // TODO: Change the autogenerated stub
    }
}
return 'TaggerTagRemoveProcessor';